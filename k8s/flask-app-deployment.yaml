apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-music-app
  labels:
    app: flask-music-app
spec:
  replicas: 2  # 2개의 워커 노드에 배포
  selector:
    matchLabels:
      app: flask-music-app
  template:
    metadata:
      labels:
        app: flask-music-app
    spec:
      containers:
      - name: flask-music-app
        image: dudqo0102/flask-music-app-flask_web:v2
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: flask-music-secret
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: flask-music-secret
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: flask-music-secret
              key: DB_NAME
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: flask-music-secret
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flask-music-secret
              key: DB_PASSWORD
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: flask-music-secret
              key: SECRET_KEY
        - name: FLASK_ENV
          value: "production"
        volumeMounts:
        - name: music-storage
          mountPath: /app/music  # Flask 앱의 음악 파일 저장 경로
      volumes:
      - name: music-storage
        persistentVolumeClaim:
          claimName: flask-music-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: flask-music-service
spec:
  selector:
    app: flask-music-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: NodePort  # 외부에서 접근 가능하도록 설정

